{"version":3,"sources":["auth/LogIn.module.css","auth/LogIn.js"],"names":["module","exports","LogIn","props","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useForm","email","value","isValid","password","formState","inputHandler","loginSubmitHandler","event","a","preventDefault","process","JSON","stringify","inputs","responseData","login","userId","token","asOverlay","onClear","style","textAlign","paddingTop","className","classes","onSubmit","element","id","type","label","validators","VALIDATOR_EMAIL","errorText","onInput","VALIDATOR_REQUIRE","disabled"],"mappings":"uIACAA,EAAOC,QAAU,CAAC,MAAQ,uB,2KCgFXC,UArED,SAACC,GACb,IAAMC,EAAOC,qBAAWC,KADD,EAE+BC,cAA9CC,EAFe,EAEfA,UAAWC,EAFI,EAEJA,MAAOC,EAFH,EAEGA,YAAaC,EAFhB,EAEgBA,WAFhB,EAIwBC,YAC7C,CACEC,MAAO,CACLC,MAAO,GACPC,SAAS,GAEXC,SAAU,CACRF,MAAO,GACPC,SAAS,KAGb,GAfqB,mBAIhBE,EAJgB,KAILC,EAJK,KAkBjBC,GAlBiB,KAkBC,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACzBD,EAAME,iBADmB,kBAGIZ,EAAY,GAAD,OACjCa,+CADiC,oBAEpC,OACAC,KAAKC,UAAU,CACbZ,MAAOI,EAAUS,OAAOb,MAAMC,MAC9BE,SAAUC,EAAUS,OAAOV,SAASF,QAEtC,CAAE,eAAgB,qBAVG,OAGjBa,EAHiB,OAYvBvB,EAAKwB,MAAMD,EAAaE,OAAQF,EAAaG,OAZtB,yGAAH,uDAexB,OACE,qCACGtB,GACC,8BACE,cAAC,IAAD,CAAgBuB,WAAS,MAG7B,cAAC,IAAD,CAAYtB,MAAOA,EAAOuB,QAASrB,IACnC,oBAAIsB,MAAO,CAAEC,UAAW,SAAUC,WAAY,QAA9C,0BACA,uBAAMC,UAAWC,IAAQnC,MAAOoC,SAAUnB,EAA1C,UACE,cAAC,IAAD,CACEoB,QAAQ,QACRC,GAAG,QACHC,KAAK,QACLC,MAAM,SACNC,WAAY,CAACC,eACbC,UAAU,mDACVC,QAAS5B,IAEX,cAAC,IAAD,CACEqB,QAAQ,QACRC,GAAG,WACHC,KAAK,WACLC,MAAM,eACNC,WAAY,CAACI,eACbF,UAAU,uCACVC,QAAS5B,IAEX,cAAC,IAAD,CAAQuB,KAAK,SAASO,UAAW/B,EAAUF,QAA3C","file":"static/js/11.a56d241f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"LogIn\":\"LogIn_LogIn__BX0jr\"};","import React, { useState, useContext } from \"react\";\n\nimport Input from \"../shared/components/UIElements/Input\";\nimport Button from \"../shared/components/UIElements/Button\";\nimport LoadingSpinner from \"../shared/components/UIElements/LoadingSpinner\";\nimport ErrorModal from \"../shared/components/UIElements/ErrorModal\";\nimport { useForm } from \"../shared/hook/form-hook\";\nimport { AuthContext } from \"../shared/context/auth-context\";\nimport { useHttpClient } from \"../shared/hook/http-hook\";\nimport { VALIDATOR_EMAIL, VALIDATOR_REQUIRE } from \"../utils/validators\";\nimport classes from \"./LogIn.module.css\";\n\nconst LogIn = (props) => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormDate] = useForm(\n    {\n      email: {\n        value: \"\",\n        isValid: false,\n      },\n      password: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const loginSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      const responseData = await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/api/users/login`,\n        \"POST\",\n        JSON.stringify({\n          email: formState.inputs.email.value,\n          password: formState.inputs.password.value,\n        }),\n        { \"Content-Type\": \"application/json\" }\n      );\n      auth.login(responseData.userId, responseData.token);\n    } catch (err) {}\n  };\n  return (\n    <>\n      {isLoading && (\n        <div>\n          <LoadingSpinner asOverlay />\n        </div>\n      )}\n      <ErrorModal error={error} onClear={clearError} />\n      <h1 style={{ textAlign: \"center\", paddingTop: \"2rem\" }}>登入</h1>\n      <form className={classes.LogIn} onSubmit={loginSubmitHandler}>\n        <Input\n          element=\"input\"\n          id=\"email\"\n          type=\"email\"\n          label=\"E-mail\"\n          validators={[VALIDATOR_EMAIL()]}\n          errorText=\"請輸入有效的E-mail。\"\n          onInput={inputHandler}\n        />\n        <Input\n          element=\"input\"\n          id=\"password\"\n          type=\"password\"\n          label=\"密碼\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"請輸入密碼。\"\n          onInput={inputHandler}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          登入\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default LogIn;\n"],"sourceRoot":""}